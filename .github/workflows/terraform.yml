name: Terraform IaC Deployment

on:
  push:
    branches: [ develop, main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ develop, main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    outputs:
      ec2_ip: ${{ steps.terraform_output.outputs.ec2_public_ip }}
      deployment_ready: ${{ steps.deployment_ready.outputs.ready }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file terraform.tfvars -out plan.out

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: terraform apply "plan.out"

      - name: Get Terraform Outputs
        id: terraform_output
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          # Usar el nombre correcto del output: instance_public_ip en lugar de ec2_public_ip
          EC2_IP=$(terraform output -raw instance_public_ip)
          echo "ec2_public_ip=${EC2_IP}" >> $GITHUB_OUTPUT

      - name: Wait for EC2 Instance to be Ready
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        id: wait_for_ec2
        run: |
          echo "Waiting for EC2 instance to be ready..."
          timeout=600
          interval=10
          elapsed=0
          
          until nc -z -w 5 ${{ steps.terraform_output.outputs.ec2_public_ip }} 22; do
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for EC2 instance to be ready"
              exit 1
            fi
            echo "Waiting for SSH to be available... ($elapsed/$timeout seconds)"
            sleep $interval
            elapsed=$((elapsed + interval))
          done
          
          # Additional wait to make sure system is fully initialized
          sleep 60
          echo "EC2 instance is ready!"

      - name: Set Deployment Ready Flag
        id: deployment_ready
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: echo "ready=true" >> $GITHUB_OUTPUT